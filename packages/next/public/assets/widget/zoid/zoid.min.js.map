{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/bridge/parent.js","webpack://zoid/./node_modules/post-robot/src/bridge/setup.js","webpack://zoid/./node_modules/post-robot/src/bridge/bridge.js","webpack://zoid/./node_modules/post-robot/src/bridge/child.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/index.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/window.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","constructor","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","all","promises","count","results","prom","hash","keys","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","isAboutProtocol","win","location","protocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","mockDomain","isSameDomain","desc","getOwnPropertyDescriptor","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getUserAgent","navigator","mockUserAgent","userAgent","getFrameByName","winFrames","childFrame","isOpener","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","split","slice","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","normalizeMockUrl","closeWindow","close","objectIDs","awaitFrameLoadPromises","CrossDomainSafeWeakMap","weakmap","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","Date","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","memoize","options","cacheMap","memoizedFunction","cache","thisNamespace","cacheTime","now","reset","memoizePromise","memoizedPromiseFunction","inlineMemoize","logic","__inline_memoize_cache__","noop","once","called","stringifyError","level","newErr","extend","safeInterval","loop","arrayFrom","isDefined","cleanup","tasks","cleaned","register","task","shift","assertExists","thing","isDocumentReady","document","body","readyState","urlEncode","waitForDocumentReady","interval","setInterval","clearInterval","parseQuery","queryString","params","pair","decodeURIComponent","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","el","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","hasAttribute","getElement","event","removeEventListener","prototype","showElement","setProperty","hideElement","destroyElement","removeChild","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","observer","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","isPerc","test","toNum","toPx","toCSS","normalizeDimension","dim","max","getGlobal","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","awaitWindowHello","getHelloPromise","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","needsBridgeForBrowser","needsBridgeForWin","needsBridgeForDomain","needsBridge","getBridgeName","BRIDGE_NAME_PREFIX","isBridge","documentBodyReady","registerRemoteWindow","findRemoteWindow","remoteWinPromise","registerRemoteSendMessage","sendMessage","remoteWin","remoteDomain","fireAndForget","rejectRemoteSendMessage","linkWindow","popupWindowsByName","popupWindowsByWin","winName","details","setupBridge","windowOpen","on","receiveMessage","open","last","bridgePromise","bridge","winDetails","listenForOpenTunnel","openTunnelToParent","canary","tunnelWindows","parentWindow","cleanTunnelWindows","addTunnelWindow","tunnelWindow","setupOpenTunnelToParent","openTunnelToOpener","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","getType","getName","focus","isClosed","setLocation","href","setName","sameDomain","frameElement","querySelectorAll","getFrameForWindow","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","opts","crossDomainFunctionWrapper","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","dom","forEach","postMessage","messagingChild","messagingParent","sendBridgeMessage","foreignGlobal","RECEIVE_MESSAGE_TYPES","logName","sendResponse","ack","response","pathname","handleError","receivedMessages","parsedMessage","parseMessage","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","internalSerializeMessage","internalDeserializeMessage","cleanUpWindow","getProxyObject","openBridge","bridges","bridgeFrames","src","openBridgeFrame","linkUrl","hasBridge","destroyBridges","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","parseChildWindowName","windowName","zoidcomp","encodedPayload","atob","charCodeAt","base64decode","getChildPayload","destroy","getQueryParam","queryParam","getQueryValue","queryValue","parentComponent","overrides","parentWin","triggered","currentProxyWin","currentProxyContainer","childComponent","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","initPromise","handledErrors","clean","state","eventName","handlerList","trigger","triggerOnce","visible","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getPropsForChild","sendToChild","windowProp","proxyWin","containerElement","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","insertShadowSlot","getPropsRef","childDomain","propRef","getUrl","getChildDomain","getDomainMatcher","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","getWindowRef","windows","initChild","childExports","proxyFrame","frameWatcher","outerWidth","left","round","screenX","screen","outerHeight","screenY","status","toolbar","menubar","resizable","scrollbars","popup","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","proxyContainer","innerContainer","getHelpers","updateProps","setProps","newProps","isUpdate","inputProps","propNames","aliases","propDef","alias","default","decorate","required","extendProps","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","ZOID","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildUrlPromise","serialization","dotify","prefix","newobj","every","dotkey","propsToQuery","query","originalUrl","originalHash","hashString","extendUrl","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","buildWindowNamePromise","childPayload","version","__ZOID__","parentDomain","checkClose","buildWindowName","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","loadUrlPromise","builtUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","bridgeUrl","bridgeDomain","runTimeoutPromise","onRenderedPromise","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","defaultNoop","decorateOnce","component","allowedParentDomains","defaultContext","validate","logger","info","normalizeOptions","isChild","payload","registerChild","xprops","components","onPropHandlers","propsRef","parentComponentWindow","ref","getNthParent","ancestor","getParentComponentWindow","normalizedProps","normalizeChildProps","checkParentDomain","getAutoResize","getProps","getPropsByRef","getDefaultContext","finalContext","getDefaultContainer","renderTo","driver","driverName","dep","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyAll","destroyPromise","destroyComponents","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        let toString = ({}).toString;\n\n        if (toString) {\n            let name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : { cancel : () => void } {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    let promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    handlers : Array<{\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    }>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            let err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        let { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            let { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n\n                if (result.resolved) {\n                    promise.resolve(result.value);\n                } else {\n                    promise.reject(result.error);\n                }\n\n                result.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X : mixed, Y : mixed>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        let promise : ZalgoPromise<X | Y> = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X : mixed, Y : mixed>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        return this.then(undefined, onError);\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        let timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    static resolve<X : mixed>(value : X | ZalgoPromise<X>) : ZalgoPromise<X> {\n\n        if (value instanceof ZalgoPromise) {\n            return value;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : Array<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        let promise = new ZalgoPromise();\n        let count = promises.length;\n        let results = [];\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            let prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        let result = {};\n        \n        return ZalgoPromise.all(Object.keys(promises).map(key => {\n            return ZalgoPromise.resolve(promises[key]).then(value => {\n                result[key] = value;\n            });\n        })).then(() => {\n            return result;\n        });\n    }\n\n    static map<T, X>(items : Array<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<Array<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : { cancel : () => void } {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X : mixed, Y : mixed, C : mixed, A : Array<mixed>>(method : (...args : A) => (ZalgoPromise<X> | Y), context : ?C, args : ?A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result;\n\n        startActive();\n        \n        try {\n            // $FlowFixMe\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        return ZalgoPromise.resolve(result);\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nlet IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return win.location.protocol === PROTOCOL.ABOUT;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    let location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    let protocol = location.protocol;\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        let parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    let host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    let domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        let desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n\n        if (win === window) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    let childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let result = [];\n\n    for (let frame of getFrames(win)) {\n        result.push(frame);\n\n        for (let childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (let frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    let top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    let frames = getAllFramesInWindow(win);\n    let opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    let doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nlet iframeWindows = [];\nlet iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    let iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        let frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let winFrames = getFrames(win);\n\n    for (let childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        let namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    let frame;\n\n    frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    let top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    let frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (let childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    let opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    let parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : Array<CrossDomainWindowType> {\n\n    let results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    let actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (let frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (let item1 of collection1) {\n        for (let item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    let top1 = getTop(win1) || win1;\n    let top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    let allFrames1 = getAllFramesInWindow(win1);\n    let allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    let opener1 = getOpener(top1);\n    let opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() }`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : { cancel : () => void } {\n\n    let timeout;\n\n    let check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : Array<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    keys : Array<K>\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        let weakmap = this.weakmap;\n        let keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            let value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let name = this.name;\n                let entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let values = this.values;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let keys = this.keys;\n        let index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        let weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                let entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        let index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        let value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        }));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    let chars = '0123456789abcdef';\n\n    let randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    let timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : Array<T>) : string {\n    try {\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\nexport function memoize<A, R, F : (...args : Array<A>) => R, X : { (...args : Array<A>) : R, displayName : string, reset : () => void }>(method : F, options : { time? : number, thisNamespace? : boolean } = {}) : X {\n    let cacheMap = new WeakMap();\n\n    // $FlowFixMe\n    let memoizedFunction : X = function memoizedFunction(...args : Array<A>) : R {\n        let cache = cacheMap.getOrSet(options.thisNamespace ? this : method, () => ({}));\n\n        let key : string = serializeArgs(args);\n\n        let cacheTime = options.time;\n        if (cache[key] && cacheTime && (Date.now() - cache[key].time) < cacheTime) {\n            delete cache[key];\n        }\n\n        if (cache[key]) {\n            return cache[key].value;\n        }\n\n        let time  = Date.now();\n        let value = method.apply(this, arguments);\n\n        cache[key] = { time, value };\n\n        return cache[key].value;\n    };\n\n    memoizedFunction.reset = () => {\n        cacheMap.delete(options.thisNamespace ? this : method);\n    };\n\n    return setFunctionName(memoizedFunction, `${ getFunctionName(method) }::memoized`);\n}\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : Array<any>) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : Array<any>) : ZalgoPromise<R> {\n        let key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : Array<any>) => R, options : { name? : string } = {}) : ((...args : Array<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : Array<any>) => R, logic : (...args : Array<any>) => R, args : Array<any> = []) : R {\n    // $FlowFixMe\n    let cache = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    let key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    let result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : Array<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    let regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : mixed {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            let stack = err && err.stack;\n            let message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) { // eslint-disable-line unicorn/catch-error-name\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    let defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    let index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    let original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : Array<T> {\n    let result = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result.push(obj[key]);\n        }\n    }\n    return result;\n}\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : Array<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : Array<number>) : number {\n    return Math.max(...args);\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : Array<T> {\n    let results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : Array<string> {\n    let result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        let localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : { cancel : () => void } {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    let result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, key.length - 2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        let parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            let part = parts[i];\n            let isLast = (i + 1 === parts.length);\n            let isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n};\n\nexport function eventEmitter() : EventEmitterType {\n    let triggered = {};\n    let handlers = {};\n\n    return {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            let handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            let listener = this.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            let handlerList = handlers[eventName];\n            let promises = [];\n\n            if (handlerList) {\n                for (let handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return this.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    let pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    let interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | Array<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            let value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : Array<T> { // eslint-disable-line no-undef\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    let constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    let prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : Array<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        let length = item.length;\n        let result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                let el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        let result = {};\n\n        for (let key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                let itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                let el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        let descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {\n    text : string,\n    groups : Array<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    let result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    let index : number = result.index;\n    let regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : Array<RegexResultType> {\n\n    let matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : Array<mixed>) => T, time : number = 100) : (...args : Array<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : Array<any>) => R) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport let weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : Array<any>) => ZalgoPromise<R>) => {\n\n    let weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            })\n        );\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => void,\n    all : () => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n\n    return {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                this.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) {\n            if (cleaned) {\n                method();\n            } else {\n                tasks.push(once(method));\n            }\n        },\n\n        all() : ZalgoPromise<void> {\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n                            \nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        // eslint-disable-next-line const-immutable/no-mutation\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n","/* @flow */\n/* eslint max-lines: off */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function isDocumentReady() : boolean {\n    return Boolean(document.body) && document.readyState === 'complete';\n}\n\nexport function urlEncode(str : string) : string {\n    return str.replace(/\\?/g, '%3F').replace(/&/g, '%26').replace(/#/g, '%23').replace(/\\+/g, '%2B');\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\nexport function waitForDocumentReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForDocumentReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n\n            if (isDocumentReady()) {\n                return resolve();\n            }\n\n            let interval = setInterval(() => {\n                if (isDocumentReady()) {\n                    clearInterval(interval);\n                    return resolve();\n                }\n            }, 10);\n        });\n    });\n}\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return waitForDocumentReady().then(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        throw new Error('Document ready but document.body not present');\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        let params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function formatQuery(obj : { [ string ] : string } = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string';\n    }).map(key => {\n        return `${ urlEncode(key) }=${ urlEncode(obj[key]) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : { [ string ] : string } = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : { query? : { [string] : string }, hash? : { [string] : string } } = {}) : string {\n\n    let query = options.query || {};\n    let hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    let queryString = extendQuery(originalQuery, query);\n    let hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    let meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function enablePerformance() : boolean {\n    return inlineMemoize(enablePerformance, () : boolean => {\n        /* eslint-disable compat/compat */\n        return Boolean(\n            window.performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        );\n        /* eslint-enable compat/compat */\n    });\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n\n        if (!enablePerformance()) {\n            return;\n        }\n\n        let timing = window.performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined');\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : Array<HTMLElement> {\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path } : { host? : string, path : string }) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        let url = `${ host }${ path }`;\n        let scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        for (let script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            let src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                let value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                let result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : Array<{ country? : string, lang : string }> {\n    let nav = window.navigator;\n\n    let locales = nav.languages\n        ? Array.prototype.slice.apply(nav.languages)\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            let [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    let element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        let interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                clearInterval(interval);\n                return resolve(el);\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\nexport function PopupOpenError(message : string) {\n    this.message = message;\n}\n\nPopupOpenError.prototype = Object.create(Error.prototype);\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    let { width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    if (width && height) {\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    let name = options.name || '';\n    delete options.name;\n\n    // eslint-disable-next-line array-callback-return\n    let params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params, true);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        let err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    window.addEventListener('unload', () => win.close());\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    let tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    let documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        let promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    let promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = {}, container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    let element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (let key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\n\nexport type IframeElementOptionsType = {\n    style? : { [ string ] : string },\n    class? : ?Array<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n};\n\nexport function iframe(options : IframeElementOptionsType = {}, container : ?HTMLElement) : HTMLIFrameElement {\n\n    let attributes = options.attributes || {};\n    let style = options.style || {};\n\n    let frame = createElement('iframe', {\n        attributes: {\n            allowTransparency: 'true',\n            ...attributes\n        },\n        style: {\n            backgroundColor: 'transparent',\n            border:          'none',\n            ...style\n        },\n        html:  options.html,\n        class: options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        let el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : Array<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (let eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (let eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    let capitalizedName = capitalizeFirstLetter(name);\n\n    for (let prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        let el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        let startTimeout;\n        let endTimeout;\n        let startEvent;\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nconst STYLE = {\n\n    DISPLAY: {\n        NONE:  'none',\n        BLOCK: 'block'\n    },\n\n    VISIBILITY: {\n        VISIBLE: 'visible',\n        HIDDEN:  'hidden'\n    },\n\n    IMPORTANT: 'important'\n};\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', STYLE.VISIBILITY.HIDDEN, STYLE.IMPORTANT);\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', STYLE.DISPLAY.NONE, STYLE.IMPORTANT);\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    let animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let interval;\n\n    if (isElementClosed(element)) {\n        handler();\n    } else {\n        interval = safeInterval(() => {\n            if (isElementClosed(element)) {\n                interval.cancel();\n                handler();\n            }\n        }, 50);\n    }\n\n    return {\n        cancel() {\n            if (interval) {\n                interval.cancel();\n            }\n        }\n    };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (let script of querySelectorAll('script', el)) {\n        let parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        let newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({ width : number, height : number }) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    let check = () => {\n        let newWidth = el.offsetWidth;\n        let newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        win.addEventListener('resize', check);\n    } else {\n        let loop = () => {\n            check();\n            timeout = setTimeout(loop, interval);\n        };\n        loop();\n    }\n\n    return {\n        cancel: () => {\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n\n    if (!enablePerformance()) {\n        return;\n    }\n\n    if (!window.performance || typeof window.performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = window.performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    if (isShadowElement(shadowHost)) {\n        throw new Error(`Host element is also in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n    \n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    return slotProvider;\n}\n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        let testWeakMap = new WeakMap();\n        let testKey = {};\n        let testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    let match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet } from 'belter/src';\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    if (win !== window) {\n        return win[__POST_ROBOT__.__GLOBAL_KEY__];\n    }\n    const global : Object = win[__POST_ROBOT__.__GLOBAL_KEY__] = win[__POST_ROBOT__.__GLOBAL_KEY__] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    delete window[__POST_ROBOT__.__GLOBAL_KEY__];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{ domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{ domain : string }> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : { on : OnType }) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<{ win : CrossDomainWindowType, domain : string, instanceID : string }> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(noop);\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{ domain : string }> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code });\n}\n\nexport function deserializeError({ message, stack, code } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : { win? : CrossDomainWindowType, domain? : string }) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, getFrameByName, isWindowClosed, getDomainFromUrl, normalizeMockUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { BRIDGE_TIMEOUT, MESSAGE_NAME } from '../conf';\nimport { awaitWindowHello } from '../lib';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { getBridgeName, documentBodyReady, registerRemoteSendMessage, registerRemoteWindow } from './common';\n\nexport function listenForOpenTunnel({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n\n    on(MESSAGE_NAME.OPEN_TUNNEL, ({ source, origin, data }) => {\n        const bridgePromise = globalStore('bridges').get(origin);\n\n        if (!bridgePromise) {\n            throw new Error(`Can not find bridge promise for domain ${ origin }`);\n        }\n\n        return bridgePromise.then(bridge => {\n            if (source !== bridge) {\n                throw new Error(`Message source does not matched registered bridge for domain ${ origin }`);\n            }\n\n            if (!data.name) {\n                throw new Error(`Register window expected to be passed window name`);\n            }\n\n            if (!data.sendMessage) {\n                throw new Error(`Register window expected to be passed sendMessage method`);\n            }\n\n            if (!popupWindowsByName.has(data.name)) {\n                throw new Error(`Window with name ${ data.name } does not exist, or was not opened by this window`);\n            }\n\n            if (!popupWindowsByName.get(data.name).domain) {\n                throw new Error(`We do not have a registered domain for window ${ data.name }`);\n            }\n\n            if (popupWindowsByName.get(data.name).domain !== origin) {\n                throw new Error(`Message origin ${ origin } does not matched registered window origin ${ popupWindowsByName.get(data.name).domain }`);\n            }\n\n            registerRemoteSendMessage(popupWindowsByName.get(data.name).win, origin, data.sendMessage);\n\n            return {\n                sendMessage(message) {\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    const winDetails = popupWindowsByName.get(data.name);\n\n                    if (!winDetails) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: winDetails.domain,\n                            source: winDetails.win\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n            };\n        });\n    });\n}\n\nfunction openBridgeFrame(name : string, url : string) : HTMLIFrameElement {\n\n    const iframe = document.createElement(`iframe`);\n\n    iframe.setAttribute(`name`, name);\n    iframe.setAttribute(`id`,   name);\n\n    iframe.setAttribute(`style`, `display: none; margin: 0; padding: 0; border: 0px none; overflow: hidden;`);\n    iframe.setAttribute(`frameborder`, `0`);\n    iframe.setAttribute(`border`, `0`);\n    iframe.setAttribute(`scrolling`, `no`);\n    iframe.setAttribute(`allowTransparency`, `true`);\n\n    iframe.setAttribute(`tabindex`, `-1`);\n    iframe.setAttribute(`hidden`, `true`);\n    iframe.setAttribute(`title`, ``);\n    iframe.setAttribute(`role`, `presentation`);\n\n    iframe.src = url;\n\n    return iframe;\n}\n\nexport function hasBridge(url : string, domain : string) : boolean {\n    const bridges = globalStore('bridges');\n    return bridges.has(domain || getDomainFromUrl(url));\n}\n\nexport function openBridge(url : string, domain : string) : ZalgoPromise<CrossDomainWindowType> {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n    \n    domain = domain || getDomainFromUrl(url);\n    \n    return bridges.getOrSet(domain, () => ZalgoPromise.try(() => {\n\n        if (getDomain() === domain) {\n            throw new Error(`Can not open bridge on the same domain as current domain: ${ domain }`);\n        }\n\n        const name  = getBridgeName(domain);\n        const frame = getFrameByName(window, name);\n\n        if (frame) {\n            throw new Error(`Frame with name ${ name } already exists on page`);\n        }\n\n        const iframe = openBridgeFrame(name, url);\n        bridgeFrames.set(domain, iframe);\n\n        return documentBodyReady.then(body => {\n\n            body.appendChild(iframe);\n            const bridge = iframe.contentWindow;\n\n            return new ZalgoPromise((resolve, reject) => {\n\n                iframe.addEventListener('load', resolve);\n                iframe.addEventListener('error', reject);\n\n            }).then(() => {\n\n                return awaitWindowHello(bridge, BRIDGE_TIMEOUT, `Bridge ${ url }`);\n\n            }).then(() => {\n\n                return bridge;\n            });\n        });\n    }));\n}\n\ntype WinDetails = {|\n    win : CrossDomainWindowType,\n    domain? : ?string,\n    name? : ?string\n|};\n\nexport function linkWindow({ win, name, domain } : WinDetails) : WinDetails {\n    const popupWindowsByName = globalStore('popupWindowsByName');\n    const popupWindowsByWin = windowStore('popupWindowsByWin');\n\n    for (const winName of popupWindowsByName.keys()) {\n        // $FlowFixMe\n        const details = popupWindowsByName.get(winName);\n        if (!details || isWindowClosed(details.win)) {\n            popupWindowsByName.del(winName);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        return { win, name, domain };\n    }\n\n    const details = popupWindowsByWin.getOrSet(win, () : WinDetails => {\n        if (!name) {\n            return { win };\n        }\n        \n        return popupWindowsByName.getOrSet(name, () : WinDetails => {\n            return { win, name };\n        });\n    });\n\n    if (details.win && details.win !== win) {\n        throw new Error(`Different window already linked for window: ${ name || 'undefined' }`);\n    }\n\n    if (name) {\n        details.name = name;\n        popupWindowsByName.set(name, details);\n    }\n\n    if (domain) {\n        details.domain = domain;\n        registerRemoteWindow(win);\n    }\n\n    popupWindowsByWin.set(win, details);\n    \n    return details;\n}\n\nexport function linkUrl(win : CrossDomainWindowType, url : string) {\n    linkWindow({ win, domain: getDomainFromUrl(url) });\n}\n\nexport function listenForWindowOpen() {\n    const windowOpen = window.open;\n\n    window.open = function windowOpenWrapper(url : string, name : string, options : string, last : mixed) : mixed {\n        const win = windowOpen.call(this, normalizeMockUrl(url), name, options, last);\n    \n        if (!win) {\n            return win;\n        }\n    \n        linkWindow({ win, name, domain: url ? getDomainFromUrl(url) : null });\n    \n        return win;\n    };\n}\n\nexport function destroyBridges() {\n    const bridges = globalStore('bridges');\n    const bridgeFrames = globalStore('bridgeFrames');\n\n    for (const domain of bridgeFrames.keys()) {\n        const frame = bridgeFrames.get(domain);\n        if (frame && frame.parentNode) {\n            frame.parentNode.removeChild(frame);\n        }\n    }\n    bridgeFrames.reset();\n    bridges.reset();\n}\n","/* @flow */\n\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { listenForWindowOpen, listenForOpenTunnel } from './parent';\nimport { setupOpenTunnelToParent } from './bridge';\nimport { openTunnelToOpener } from './child';\n\nexport function setupBridge({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) {\n    listenForWindowOpen();\n    listenForOpenTunnel({ on, send, receiveMessage });\n    setupOpenTunnelToParent({ on, send });\n    openTunnelToOpener({ on, send, receiveMessage });\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { getParent, isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { getGlobal, globalStore } from '../global';\nimport type { SendType, ResponseMessageEvent } from '../types';\n\nfunction cleanTunnelWindows() {\n    const tunnelWindows = globalStore('tunnelWindows');\n\n    for (const key of tunnelWindows.keys()) {\n        const tunnelWindow = tunnelWindows[key];\n\n        try {\n            noop(tunnelWindow.source);\n        } catch (err) {\n            tunnelWindows.del(key);\n            continue;\n        }\n\n        if (isWindowClosed(tunnelWindow.source)) {\n            tunnelWindows.del(key);\n        }\n    }\n}\n\ntype TunnelWindowDataType = {|\n    name : string,\n    source : CrossDomainWindowType,\n    canary : () => void,\n    sendMessage : (message : string) => void\n|};\n\nfunction addTunnelWindow({ name, source, canary, sendMessage } : TunnelWindowDataType) : string {\n    cleanTunnelWindows();\n    const id = uniqueID();\n    const tunnelWindows = globalStore('tunnelWindows');\n    tunnelWindows.set(id, { name, source, canary, sendMessage });\n    return id;\n}\n\nexport function setupOpenTunnelToParent({ send } : { send : SendType }) {\n    getGlobal(window).openTunnelToParent = function openTunnelToParent({ name, source, canary, sendMessage } : TunnelWindowDataType) : ZalgoPromise<ResponseMessageEvent> {\n\n        const tunnelWindows = globalStore('tunnelWindows');\n        const parentWindow = getParent(window);\n    \n        if (!parentWindow) {\n            throw new Error(`No parent window found to open tunnel to`);\n        }\n    \n        const id = addTunnelWindow({ name, source, canary, sendMessage });\n    \n        return send(parentWindow, MESSAGE_NAME.OPEN_TUNNEL, {\n    \n            name,\n    \n            sendMessage() {\n    \n                const tunnelWindow = tunnelWindows.get(id);\n    \n                try {\n                    // IE gets antsy if you try to even reference a closed window\n                    noop(tunnelWindow && tunnelWindow.source);\n                } catch (err) {\n                    tunnelWindows.del(id);\n                    return;\n                }\n    \n                if (!tunnelWindow || !tunnelWindow.source || isWindowClosed(tunnelWindow.source)) {\n                    return;\n                }\n    \n                try {\n                    tunnelWindow.canary();\n                } catch (err) {\n                    return;\n                }\n    \n                tunnelWindow.sendMessage.apply(this, arguments);\n            }\n    \n        }, { domain: WILDCARD });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isSameDomain, getOpener, getDomain, getFrameByName, assertSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { getGlobal, windowStore } from '../global';\nimport type { OnType, SendType, ReceiveMessageType } from '../types';\n\nimport { needsBridge, registerRemoteWindow, rejectRemoteSendMessage, registerRemoteSendMessage, getBridgeName } from './common';\n\nfunction awaitRemoteBridgeForWindow (win : CrossDomainWindowType) : ZalgoPromise<?CrossDomainWindowType> {\n    return windowStore('remoteBridgeAwaiters').getOrSet(win, () => {\n        return ZalgoPromise.try(() => {\n            const frame = getFrameByName(win, getBridgeName(getDomain()));\n\n            if (!frame) {\n                return;\n            }\n\n            if (isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                return frame;\n            }\n\n            return new ZalgoPromise(resolve => {\n\n                let interval;\n                let timeout; // eslint-disable-line prefer-const\n\n                interval = setInterval(() => { // eslint-disable-line prefer-const\n                    if (frame && isSameDomain(frame) && getGlobal(assertSameDomain(frame))) {\n                        clearInterval(interval);\n                        clearTimeout(timeout);\n                        return resolve(frame);\n                    }\n                }, 100);\n\n                timeout = setTimeout(() => {\n                    clearInterval(interval);\n                    return resolve();\n                }, 2000);\n            });\n        });\n    });\n}\n\nexport function openTunnelToOpener({ on, send, receiveMessage } : { on : OnType, send : SendType, receiveMessage : ReceiveMessageType }) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const opener = getOpener(window);\n        \n        if (!opener || !needsBridge({ win: opener })) {\n            return;\n        }\n\n        registerRemoteWindow(opener);\n\n        return awaitRemoteBridgeForWindow(opener).then(bridge => {\n\n            if (!bridge) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: no bridge found in opener`));\n            }\n\n            if (!window.name) {\n                return rejectRemoteSendMessage(opener, new Error(`Can not register with opener: window does not have a name`));\n            }\n\n            return getGlobal(assertSameDomain(bridge)).openTunnelToParent({\n\n                name: window.name,\n\n                source: window,\n\n                canary() {\n                    // pass\n                },\n\n                sendMessage(message) {\n\n                    try {\n                        noop(window);\n                    } catch (err) {\n                        return;\n                    }\n\n                    if (!window || window.closed) {\n                        return;\n                    }\n\n                    try {\n                        receiveMessage({\n                            data:   message,\n                            origin: this.origin,\n                            source: this.source\n                        }, { on, send });\n                    } catch (err) {\n                        ZalgoPromise.reject(err);\n                    }\n                }\n\n            }).then(({ source, origin, data }) => {\n\n                if (source !== opener) {\n                    throw new Error(`Source does not match opener`);\n                }\n\n                registerRemoteSendMessage(source, origin, data.sendMessage);\n\n            }).catch(err => {\n\n                rejectRemoteSendMessage(opener, err);\n                throw err;\n            });\n        });\n    });\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (string) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : { send : SendType, id? : string }) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    return {\n        id,\n        getType: () => winPromise.then(win => {\n            return getOpener(win) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        }),\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName:       () => winPromise.then(win => {\n            if (isWindowClosed(win)) {\n                return;\n            }\n\n            if (isSameDomain(win)) {\n                return assertSameDomain(win).name;\n            }\n\n            return windowNamePromise;\n        }),\n        focus:   () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation: (href) => winPromise.then(win => {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n        }),\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : { win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType }) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : { send : SendType }) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : { send : SendType }) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : { send : SendType }) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : { send : SendType }) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : { send : SendType }) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : { source : CrossDomainWindowType, origin : string, data : Object }) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {\n    id : string,\n    name : string\n}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : { id : string, name : string }, { send } : { send : SendType }) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe\n                    const options = { domain: origin, fireAndForget: opts.fireAndForget };\n                    const args = Array.prototype.slice.call(arguments);\n\n                    return send(win, MESSAGE_NAME.METHOD, { id, name, args }, options)\n                        .then(res => {\n                            if (!opts.fireAndForget) {\n                                return res.data.result;\n                            }\n                        });\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : { on : OnType, send : SendType }) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { on, send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { on, send } : { on : OnType, send : SendType }) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { on, send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n    then : SerializedFunction\n}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : { on : OnType, send : SendType }) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : { then : Function }) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, type DomainMatcher, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\nexport const SEND_MESSAGE_STRATEGIES = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : DomainMatcher) => {\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n    }\n\n    let domains;\n\n    if (Array.isArray(domain)) {\n        domains = domain;\n    } else if (typeof domain === 'string') {\n        domains = [ domain ];\n    } else {\n        domains = [ WILDCARD ];\n    }\n\n    domains = domains.map(dom => {\n\n        if (__TEST__) {\n            if (dom.indexOf(PROTOCOL.MOCK) === 0) {\n                if (window.location.protocol === PROTOCOL.FILE) {\n                    return WILDCARD;\n                }\n\n                if (!isActuallySameDomain(win)) {\n                    throw new Error(`Attempting to send messsage to mock domain ${ dom }, but window is actually cross-domain`);\n                }\n\n                // $FlowFixMe\n                const windowDomain = getDomain(win);\n                \n                if (windowDomain !== dom) {\n                    throw new Error(`Mock domain target ${ dom } does not match window domain ${ windowDomain }`);\n                }\n\n                // $FlowFixMe\n                return getActualDomain(win);\n\n            }\n        }\n        \n        if (dom.indexOf(PROTOCOL.FILE) === 0) {\n            return WILDCARD;\n        }\n\n        return dom;\n    });\n\n    domains.forEach(dom => {\n        win.postMessage(serializedMessage, dom);\n    });\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { isWindowClosed, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, stringifyError } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport type { Message } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nexport function sendMessage(win : CrossDomainWindowType, domain : DomainMatcher, message : Message, { on, send } : { on : OnType, send : SendType }) {\n    if (isWindowClosed(win)) {\n        throw new Error('Window is closed');\n    }\n    \n    const serializedMessage = serializeMessage(win, domain, {\n        [ __POST_ROBOT__.__GLOBAL_KEY__ ]: {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            ...message\n        }\n    }, { on, send });\n\n    const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n    const errors = [];\n\n    for (const strategyName of strategies) {\n        try {\n            SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n        } catch (err) {\n            errors.push(err);\n        }\n    }\n\n    if (errors.length === strategies.length) {\n        throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n    }\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({ source : CrossDomainWindowType, origin : string, data : mixed }) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) }) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : { name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher }, listener : RequestListenerType) : { cancel : () => void } {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, SuccessResponseMessage, ErrorResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport const RECEIVE_MESSAGE_TYPES = {\n\n    [ MESSAGE_TYPE.REQUEST ](source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : { on : OnType, send : SendType }) : ZalgoPromise<void> {\n\n        const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (__DEBUG__) {\n            // eslint-disable-next-line no-console\n            console.info('receive::req', logName, origin, '\\n\\n', message.data);\n        }\n\n        function sendResponse(type : $Values<typeof MESSAGE_TYPE>, ack? : $Values<typeof MESSAGE_ACK>, response = {}) {\n\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__ && type !== MESSAGE_TYPE.ACK) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    // $FlowFixMe\n                    console.info('respond::res', logName, origin, '\\n\\n', response.data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    // $FlowFixMe\n                    console.error('respond::err', logName, origin, '\\n\\n', response.error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                // $FlowFixMe\n                sendMessage(source, origin, {\n                    type,\n                    ack,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ...response\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        }\n\n        return ZalgoPromise.all([\n\n            sendResponse(MESSAGE_TYPE.ACK),\n\n            ZalgoPromise.try(() => {\n\n                if (!options) {\n                    throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n                }\n\n                if (!matchDomain(options.domain, origin)) {\n                    throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n                }\n\n                const data = message.data;\n\n                return options.handler({ source, origin, data });\n\n            }).then(data => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.SUCCESS, { data });\n\n            }, error => {\n                return sendResponse(MESSAGE_TYPE.RESPONSE, MESSAGE_ACK.ERROR, { error });\n            })\n\n        ]).then(noop).catch(err => {\n            if (options && options.handleError) {\n                return options.handleError(err);\n            } else {\n                throw err;\n            }\n        });\n    },\n\n    [ MESSAGE_TYPE.ACK ](source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        try {\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n    \n            if (source !== options.win) {\n                throw new Error(`Ack source does not match registered window`);\n            }\n        } catch (err) {\n            options.promise.reject(err);\n        }\n\n        options.ack = true;\n    },\n\n    [ MESSAGE_TYPE.RESPONSE ](source : CrossDomainWindowType, origin : string, message : SuccessResponseMessage | ErrorResponseMessage) : void | ZalgoPromise<void> {\n\n        if (isResponseListenerErrored(message.hash)) {\n            return;\n        }\n\n        const options = getResponseListener(message.hash);\n\n        if (!options) {\n            throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n        }\n\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n        }\n\n        if (source !== options.win) {\n            throw new Error(`Response source does not match registered window`);\n        }\n\n        deleteResponseListener(message.hash);\n\n        const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n        if (message.ack === MESSAGE_ACK.ERROR) {\n            if (__DEBUG__) {\n                console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n            }\n\n            options.promise.reject(message.error);\n\n        } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n            if (__DEBUG__) {\n                console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n            }\n\n            options.promise.resolve({ source, origin, data: message.data });\n        }\n    }\n};\n","/* @flow */\n\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { RECEIVE_MESSAGE_TYPES } from './types';\n\nfunction parseMessage(message : string, source : CrossDomainWindowType, origin : string, { on, send } : { on : OnType, send : SendType }) : ?Object {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    parsedMessage = parsedMessage[__POST_ROBOT__.__GLOBAL_KEY__];\n\n    if (!parsedMessage || typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    if (!parsedMessage.type || typeof parsedMessage.type !== 'string') {\n        return;\n    }\n\n    if (!RECEIVE_MESSAGE_TYPES[parsedMessage.type]) {\n        return;\n    }\n\n    return parsedMessage;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : { on : OnType, send : SendType }) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const message = parseMessage(data, source, origin, { on, send });\n\n    if (!message) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    if (receivedMessages.has(message.id)) {\n        return;\n    }\n\n    receivedMessages.set(message.id, true);\n\n    if (isWindowClosed(source) && !message.fireAndForget) {\n        return;\n    }\n\n    if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    RECEIVE_MESSAGE_TYPES[message.type](source, origin, message, { on, send });\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : { on : OnType, send : SendType }) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : { origin : string }\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : { on : OnType, send : SendType }) {\n\n    try {\n        noop(event.source);\n    } catch (err) {\n        return;\n    }\n\n    const source = event.source || event.sourceElement;\n    let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n    const data = event.data;\n\n    if (origin === 'null') {\n        origin = `${ PROTOCOL.FILE }//`;\n    }\n\n    if (!source) {\n        return;\n    }\n\n    if (!origin) {\n        throw new Error(`Post message did not have origin domain`);\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n            return;\n        }\n    }\n\n    receiveMessage({ source, origin, data }, { on, send });\n}\n\nexport function listenForMessages({ on, send } : { on : OnType, send : SendType }) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : ZalgoPromise<{ source : mixed, origin : string, data : Object }> {\n    \n    // $FlowFixMe\n    options = options || {};\n    if (typeof options === 'function') {\n        handler = options;\n        // $FlowFixMe\n        options = {};\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    promise.cancel = listener.cancel;\n    return promise;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Expected domain to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error('Target window is closed');\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : { send : SendType }) : ZalgoPromise<string | $ReadOnlyArray<string>> {\n    if (typeof targetDomain === 'string') {\n        return ZalgoPromise.resolve(targetDomain);\n    }\n    \n    return ZalgoPromise.try(() => {\n        return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n    }).then(normalizedDomain => {\n        if (!matchDomain(targetDomain, targetDomain)) {\n            throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n        }\n\n        return normalizedDomain;\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    let domain = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domain);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domain, actualDomain, { send });\n    }).then(targetDomain => {\n\n        domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        try {\n            sendMessage(win, domain, {\n                type: MESSAGE_TYPE.REQUEST,\n                hash,\n                name,\n                data,\n                fireAndForget\n            }, { on, send });\n        } catch (err) {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        }\n    \n        return fireAndForget ? promise.resolve() : promise;\n    });\n};\n","/* @flow */\n\nimport { setup } from './setup';\nimport { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge, needsBridgeForBrowser, hasBridge,\n    needsBridgeForWin, needsBridgeForDomain, destroyBridges } from './bridge';\n\nexport { ZalgoPromise as Promise } from 'zalgo-promise/src';\n\nexport * from './types';\nexport { ProxyWindow } from './serialize';\nexport { setup, destroy, serializeMessage, deserializeMessage, createProxyWindow, toProxyWindow } from './setup';\nexport { on, once, send } from './public';\nexport { markWindowKnown } from './lib';\nexport { cleanUpWindow } from './clean';\nexport let bridge;\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n    bridge = { setupBridge, openBridge, linkWindow, linkUrl, isBridge, needsBridge,\n        needsBridgeForBrowser, hasBridge, needsBridgeForWin, needsBridgeForDomain, destroyBridges };\n}\n\nif (__POST_ROBOT__.__AUTO_SETUP__) {\n    setup();\n}\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nexport function getGlobal(win? : CrossDomainWindowType = window) : Object {\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[__ZOID__.__GLOBAL_KEY__]) {\n        win[__ZOID__.__GLOBAL_KEY__] = {};\n    }\n\n    return win[__ZOID__.__GLOBAL_KEY__];\n}\n\nexport function destroyGlobal() {\n    delete window[__ZOID__.__GLOBAL_KEY__];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   `string`,\n    OBJECT:   `object`,\n    FUNCTION: `function`,\n    BOOLEAN:  `boolean`,\n    NUMBER:   `number`,\n    ARRAY:    `array`\n};\n\nexport const INITIAL_PROPS = {\n    RAW: 'raw',\n    UID: 'uid'\n};\n\nexport const WINDOW_REFERENCES = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T>(propsDef : PropsDefinitionType<P>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide } = helpers;\n        const decoratedValue = prop.childDecorate({ value, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P>, isUpdate : boolean = false) : (PropsType<P>) {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n\nimport { inlineMemoize, stringifyError, base64decode } from 'belter/src';\n\nimport { ZOID } from '../constants';\nimport type { ChildPayload } from '../parent';\n\nfunction parseChildWindowName(windowName : string) : ChildPayload {\n    return inlineMemoize(parseChildWindowName, () => {\n        if (!windowName) {\n            throw new Error(`No window name`);\n        }\n    \n        const [ , zoidcomp, name, encodedPayload ] = windowName.split('__');\n    \n        if (zoidcomp !== ZOID) {\n            throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n        }\n    \n        if (!name) {\n            throw new Error(`Expected component name`);\n        }\n    \n        if (!encodedPayload) {\n            throw new Error(`Expected encoded payload`);\n        }\n    \n        try {\n            return JSON.parse(base64decode(encodedPayload));\n        } catch (err) {\n            throw new Error(`Can not decode window name payload: ${ encodedPayload }: ${ stringifyError(err) }`);\n        }\n    }, [ windowName ]);\n}\n\nexport function getChildPayload() : ?ChildPayload {\n    try {\n        return parseChildWindowName(window.name);\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getDomain, getOpener,\n    getNthParentFromTop, getAncestor, getAllFramesInWindow,\n    type CrossDomainWindowType, onCloseWindow } from 'cross-domain-utils/src';\nimport { markWindowKnown, deserializeMessage, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, waitForDocumentBody, onResize, getElementSafe, assertExists } from 'belter/src';\n\nimport { getGlobal } from '../lib';\nimport { CONTEXT, INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport type { NormalizedComponentOptionsType } from '../component';\nimport type { PropsType } from '../component/props';\nimport type { WindowRef, PropRef } from '../parent';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\nimport { getChildPayload } from './window';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P> = {|\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => void,\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getParentComponentWindow(ref : WindowRef) : CrossDomainWindowType {\n    const { type } = ref;\n\n    if (type === WINDOW_REFERENCES.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (type === WINDOW_REFERENCES.PARENT && typeof ref.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, ref.distance));\n\n    } else if (type === WINDOW_REFERENCES.GLOBAL && ref.uid && typeof ref.uid === 'string') {\n        const { uid } = ref;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const global = getGlobal(frame);\n\n                if (global && global.windows && global.windows[uid]) {\n                    return global.windows[uid];\n                }\n            }\n        }\n    }\n\n    throw new Error(`Unable to find ${ type } parent component window`);\n}\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nfunction getPropsByRef<P>(parentComponentWindow : CrossDomainWindowType, domain : string, { type, value, uid } : PropRef) : (PropsType<P>) {\n    let props;\n\n    if (type === INITIAL_PROPS.RAW) {\n        props = value;\n    } else if (type === INITIAL_PROPS.UID) {\n        if (!isSameDomain(parentComponentWindow)) {\n            throw new Error(`Parent component window is on a different domain - expected ${ getDomain() } - can not retrieve props`);\n        }\n\n        const global = getGlobal(parentComponentWindow);\n        props = assertExists('props', global && global.props[uid]);\n    }\n\n    if (!props) {\n        throw new Error(`Could not find props`);\n    }\n\n    return deserializeMessage(parentComponentWindow, domain, props);\n}\n\nexport type ChildComponent<P> = {|\n    getProps : () => PropsType<P>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P>(options : NormalizedComponentOptionsType<P>) : ChildComponent<P> {\n    const { propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n    const childPayload = getChildPayload();\n    let props : PropsType<P>;\n\n    if (!childPayload) {\n        throw new Error(`No child payload found`);\n    }\n\n    if (childPayload.version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ childPayload.version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { parent: parentRef, parentDomain, exports, context, props: propsRef } = childPayload;\n    const parentComponentWindow = getParentComponentWindow(parentRef);\n    const parent = deserializeMessage(parentComponentWindow, parentDomain, exports);\n\n    const { show, hide, close } = parent;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (parent && parent.onError) {\n                return parent.onError(err);\n            } else {\n                throw err;\n            }\n        });\n    };\n\n    const resize = ({ width, height } : { width : ?number, height : ?number }) : ZalgoPromise<void> => {\n        return parent.resize.fireAndForget({ width, height });\n    };\n\n    const getHelpers = () : ChildHelpers<P> => {\n        return {\n            show, hide, close, focus, onError, resize,\n            onProps, getParent, getParentDomain\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            parent.checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : { width : boolean, height : boolean, element : ?HTMLElement } => {\n        let { width = false, height = false, element = 'body' } = autoResize;\n        element = getElementSafe(element);\n        return { width, height, element };\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return waitForDocumentBody().then(() => {\n            const { width, height, element } = getAutoResize();\n\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parent.init({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        }\n\n        setProps(getPropsByRef(parentComponentWindow, parentDomain, propsRef), parentDomain);\n        return props;\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, extend } from 'belter/src';\n\nimport type { PropsInputType, PropsType, PropsDefinitionType, MixedPropDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\n/*  Normalize Props\n    ---------------\n\n    Turn props into normalized values, using defaults, function options, etc.\n*/\n\nexport function extendProps<P>(propsDef : PropsDefinitionType<P>, props : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, isUpdate : boolean = false) { // eslint-disable-line complexity\n\n    // $FlowFixMe\n    inputProps = inputProps || {};\n    extend(props, inputProps);\n\n    const propNames = isUpdate ? [] : [ ...Object.keys(propsDef) ];\n\n    for (const key of Object.keys(inputProps)) {\n        if (propNames.indexOf(key) === -1) {\n            propNames.push(key);\n        }\n    }\n\n    const aliases = [];\n\n    const { state, close, focus, event, onError } = helpers;\n\n    for (const key of propNames) {\n        const propDef = propsDef[key];\n\n        // $FlowFixMe\n        let value = inputProps[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        const alias = propDef.alias;\n        if (alias) {\n            if (!isDefined(value) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n            aliases.push(alias);\n        }\n\n        if (propDef.value) {\n            value = propDef.value({ props, state, close, focus, event, onError });\n        }\n\n        if (!isDefined(value) && propDef.default) {\n            value = propDef.default({ props, state, close, focus, event, onError });\n        }\n\n        if (isDefined(value)) {\n            if (propDef.type === 'array' ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n            }\n        }\n        \n        // $FlowFixMe\n        props[key] = value;\n    }\n\n    for (const alias of aliases) {\n        delete props[alias];\n    }\n\n    // $FlowFixMe\n    for (const key of Object.keys(props)) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        if (!propDef) {\n            continue;\n        }\n\n        if (__DEBUG__ && isDefined(value) && propDef.validate) {\n            // $FlowFixMe\n            propDef.validate({ value, props });\n        }\n\n        if (isDefined(value) && propDef.decorate) {\n            props[key] = propDef.decorate({ value, props, state, close, focus, event, onError });\n        }\n    }\n\n    for (const key of Object.keys(propsDef)) {\n        const propDef = propsDef[key];\n        // $FlowFixMe\n        const propVal = props[key];\n        if (propDef.required !== false && !isDefined(propVal)) {\n            throw new Error(`Expected prop \"${ key }\" to be defined`);\n        }\n    }\n}\n\n// $FlowFixMe\nfunction getQueryParam<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryParam === 'function') {\n            return prop.queryParam({ value });\n        } else if (typeof prop.queryParam === 'string') {\n            return prop.queryParam;\n        } else {\n            return key;\n        }\n    });\n}\n\n// $FlowFixMe\nfunction getQueryValue<T, P>(prop : MixedPropDefinitionType<P>, key : string, value : T) : ZalgoPromise<mixed> {\n    return ZalgoPromise.try(() => {\n        if (typeof prop.queryValue === 'function' && isDefined(value)) {\n            return prop.queryValue({ value });\n        } else {\n            return value;\n        }\n    });\n}\n\nexport function propsToQuery<P>(propsDef : PropsDefinitionType<P>, props : (PropsType<P>)) : ZalgoPromise<{ [string] : string }> {\n\n    const params = {};\n\n    // $FlowFixMe\n    const keys = Object.keys(props);\n    \n    return ZalgoPromise.all(keys.map(key => {\n\n        const prop = propsDef[key];\n\n        if (!prop) {\n            return; // eslint-disable-line array-callback-return\n        }\n\n        return ZalgoPromise.resolve().then(() => {\n\n            const value = props[key];\n\n            if (!value) {\n                return;\n            }\n\n            if (!prop.queryParam) {\n                return;\n            }\n\n            return value;\n\n        }).then(value => {\n\n            if (value === null || typeof value === 'undefined') {\n                return;\n            }\n\n            return ZalgoPromise.all([\n                getQueryParam(prop, key, value),\n                getQueryValue(prop, key, value)\n            ]).then(([ queryParam, queryValue ]) => {\n\n                let result;\n\n                if (typeof queryValue === 'boolean') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'string') {\n                    result = queryValue.toString();\n                } else if (typeof queryValue === 'object' && queryValue !== null) {\n\n                    if (prop.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(queryValue);\n                    } else if (prop.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = btoa(JSON.stringify(queryValue));\n                    } else if (prop.serialization === PROP_SERIALIZATION.DOTIFY || !prop.serialization) {\n                        result = dotify(queryValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof queryValue === 'number') {\n                    result = queryValue.toString();\n                }\n\n                params[queryParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, serializeMessage, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain,\n    getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup, base64encode, isRegex,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT,\n    INITIAL_PROPS, WINDOW_REFERENCES } from '../constants';\nimport { getGlobal, getProxyObject, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { DimensionsType } from '../types';\nimport type { NormalizedComponentOptionsType } from '../component';\n\nimport { propsToQuery, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsInputType<P>,\n    tag : string,\n    context : string,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<ProxyWindow>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : DimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{ width? : ?number, height? : ?number }], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nexport type PropRef =\n    {| type : typeof INITIAL_PROPS.RAW, uid? : string, value? : string |};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCES.OPENER |} |\n    {| type : typeof WINDOW_REFERENCES.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCES.GLOBAL, uid : string |};\n\nexport type ChildPayload = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    parentDomain : string,\n    childDomain : string,\n    parent : WindowRef,\n    props : PropRef,\n    exports : string\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype GetProxyContainer = (container : string | HTMLElement) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> }) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, { windowName : string }) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, { context : $Values<typeof CONTEXT>, uid : string }) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, { proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string }) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype ParentComponent<P> = {|\n    init : () => void,\n    render : (CrossDomainWindowType, string | HTMLElement, $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function parentComponent<P>(options : NormalizedComponentOptionsType<P>, overrides? : ParentDelegateOverrides<P> = getDefaultOverrides(), parentWin : CrossDomainWindowType = window) : ParentComponent<P> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n\n    let visible : boolean = true;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n\n    const getPropsForChild = (domain : string | RegExp) : PropsType<P> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(domain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return result;\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return initPromise.reject(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : string | HTMLElement) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const getPropsRef = (proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, uid : string) : PropRef => {\n        const value = serializeMessage(proxyWin, domain, getPropsForChild(domain));\n\n        const propRef = (childDomain === getDomain())\n            ? { type: INITIAL_PROPS.UID, uid }\n            : { type: INITIAL_PROPS.RAW, value };\n\n        if (propRef.type === INITIAL_PROPS.UID) {\n            const global = getGlobal(window);\n            global.props = global.props || {};\n            global.props[uid] = value;\n\n            clean.register(() => {\n                delete global.props[uid];\n            });\n        }\n\n        return propRef;\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            visible = true;\n            if (currentProxyContainer) {\n                return currentProxyContainer.get().then(showElement);\n            }\n        });\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            visible = false;\n            if (currentProxyContainer) {\n                return currentProxyContainer.get().then(hideElement);\n            }\n        });\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return propsToQuery(propsDef, props).then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getChildDomain = () : string => {\n        if (domainMatch && typeof domainMatch === 'string') {\n            return domainMatch;\n        }\n\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : string | RegExp => {\n        if (domainMatch && isRegex(domainMatch)) {\n            return domainMatch;\n        }\n\n        return getChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : { windowName : string }) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                return getProxyObject(iframe({\n                    attributes: {\n                        name:  windowName,\n                        title: name,\n                        ...attributes.iframe\n                    }\n                }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                return getProxyObject(iframe({\n                    attributes: {\n                        name:  `__zoid_prerender_frame__${ name }_${ uniqueID() }__`,\n                        title: `prerender__${ name }`,\n                        ...attributes.iframe\n                    }\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render target found`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, domain : string, uid : string, context : $Values<typeof CONTEXT>) : WindowRef => {\n        \n        if (domain === getDomain(window)) {\n            const global = getGlobal(window);\n            global.windows = global.windows || {};\n            global.windows[uid] = window;\n            clean.register(() => {\n                delete global.windows[uid];\n            });\n    \n            return { type: WINDOW_REFERENCES.GLOBAL, uid };\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCES.OPENER };\n        }\n\n        return { type: WINDOW_REFERENCES.PARENT, distance: getDistanceFromTop(window) };\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            childComponent = childExports;\n            initPromise.resolve();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : { width? : ?number, height? : ?number }) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err? : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all();\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = () : ZalgoPromise<void> => {\n        if (closeOverride) {\n            return closeOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.CLOSE);\n        }).then(() => {\n            return destroy(new Error(`Window closed`));\n        });\n    };\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : { proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string }) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n        \n                        const frameWatcher = watchElementForClose(frame, close);\n                        clean.register(() => frameWatcher.cancel());\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n        \n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width, height } = dimensions;\n    \n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n    \n                const win = popup('', {\n                    name: windowName,\n                    width,\n                    height,\n                    ...attributes.popup\n                });\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render target found`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin;\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (isClosed) {\n                return close();\n            } else if (!cancelled) {\n                return watchForClose(proxyWin);\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close();\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close();\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P> => {\n        const checkClose = () => checkWindowClose(win);\n        return { init: initChild, close, checkClose, resize, onError, show, hide };\n    };\n\n    const buildChildPayload = ({ proxyWin, childDomain, domain, target = window, context, uid } : { proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string } = {}) : ChildPayload => {\n        return {\n            uid,\n            context,\n            tag,\n            version:      __ZOID__.__VERSION__,\n            childDomain,\n            parentDomain: getDomain(window),\n            parent:       getWindowRef(target, childDomain, uid, context),\n            props:        getPropsRef(proxyWin, childDomain, domain, uid),\n            exports:      serializeMessage(proxyWin, domain, buildParentExports(proxyWin))\n        };\n    };\n\n    const buildWindowName = ({ proxyWin, childDomain, domain, target, uid, context } : { proxyWin : ProxyWindow, childDomain : string, domain : string | RegExp, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>, uid : string }) : string => {\n        const childPayload = buildChildPayload({ proxyWin, childDomain, domain, target, context, uid });\n        return `__${ ZOID }__${ name }__${ base64encode(JSON.stringify(childPayload)) }__`;\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, uid, container, doc, frame, prerenderFrame } : { context : $Values<typeof CONTEXT>, uid : string, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement }) : ?HTMLElement => {\n        // $FlowFixMe\n        return renderer({\n            container, context, uid, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions, event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context, uid } : { context : $Values<typeof CONTEXT>, uid : string }) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context, uid });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, uid, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n            }\n        });\n    };\n\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, uid } :\n        { context : $Values<typeof CONTEXT>, uid : string, proxyFrame : ?ProxyObject<HTMLIFrameElement>, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement> }) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, uid });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null\n        }).then(({ container, frame, prerenderFrame }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, uid, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, domain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain }) || bridge.hasBridge(domain, domain)) {\n                    return;\n                }\n\n                const bridgeUrl = options.bridgeUrl;\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, domain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const setProps = (newProps : PropsInputType<P>, isUpdate? : boolean = false) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newProps });\n        }\n\n        const helpers = getHelpers();\n        extendProps(propsDef, props, newProps, helpers, isUpdate);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps, true);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            \n            if (!child || !proxyWin) {\n                return;\n            }\n\n            return child.updateProps(getPropsForChild(getDomainMatcher())).catch(err => {\n                return checkWindowClose(proxyWin).then(closed => {\n                    if (!closed) {\n                        throw err;\n                    }\n                });\n            });\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            overrides: { props: delegateProps, event, close, onError }\n        }).then(({ data: { parent } }) => {\n            clean.register(() => {\n                if (!isWindowClosed(target)) {\n                    return parent.destroy();\n                }\n            });\n            return parent.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, domain : string | RegExp, container : string | HTMLElement) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(domain, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ domain.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = (target : CrossDomainWindowType, container : string | HTMLElement, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n            const domain = getDomainMatcher();\n            const childDomain = getChildDomain();\n            \n            checkAllowRender(target, domain, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildUrlPromise = buildUrl();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, childDomain, domain, target, context, uid });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, uid, proxyFrame, proxyPrerenderFrame });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context, uid });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, builtUrl: buildUrlPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, builtUrl }) => {\n                return proxyWin.setLocation(builtUrl);\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, childDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        setProps,\n        getHelpers,\n        getDelegateOverrides\n    };\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions : { width, height } } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport { PROP_SERIALIZATION } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({ width : ?number, height : ?number }) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => void; // eslint-disable-line no-use-before-define\n\nexport type PropsInputType<P> = {\n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>\n} & P;\n\nexport type PropsType<P> = {\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    close? : ?closePropType,\n    focus? : ?focusPropType,\n    resize? : ?resizePropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>\n} & P;\n\ntype PropDefinitionType<T, P, S : string> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        onProps : ((PropsType<P>) => void) => void,\n        resize : ({ width : ?number, height : ?number }) => ZalgoPromise<void>,\n        getParentDomain : () => string,\n        getParent : () => CrossDomainWindowType,\n        show : () => ZalgoPromise<void>,\n        hide : () => ZalgoPromise<void>\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({ value : T }) => (string | ZalgoPromise<string>),\n    queryValue? : ({| value : T |}) => (ZalgoPromise<mixed> | mixed),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsInputType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BooleanPropDefinitionType<T : boolean, P> = PropDefinitionType<T, P, 'boolean'>;\nexport type StringPropDefinitionType<T : string, P> = PropDefinitionType<T, P, 'string'>;\nexport type NumberPropDefinitionType<T : number, P> = PropDefinitionType<T, P, 'number'>;\nexport type FunctionPropDefinitionType<T : Function, P> = PropDefinitionType<T, P, 'function'>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P> = PropDefinitionType<T, P, 'array'>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P> = PropDefinitionType<T, P, 'object'>;\n\nexport type MixedPropDefinitionType<P> = BooleanPropDefinitionType<*, P> | StringPropDefinitionType<*, P> | NumberPropDefinitionType<*, P> | FunctionPropDefinitionType<*, P> | ObjectPropDefinitionType<*, P> | ArrayPropDefinitionType<*, P>;\n\nexport type UserPropsDefinitionType<P> = {\n    [string] : MixedPropDefinitionType<P>\n};\n\nexport type BuiltInPropsDefinitionType<P> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P>,\n    window : ObjectPropDefinitionType<windowPropType, P>,\n    close : FunctionPropDefinitionType<closePropType, P>,\n    focus : FunctionPropDefinitionType<focusPropType, P>,\n    resize : FunctionPropDefinitionType<resizePropType, P>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P>,\n    hide : FunctionPropDefinitionType<hidePropType, P>,\n    show : FunctionPropDefinitionType<showPropType, P>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P>\n|};\n\nexport type PropsDefinitionType<P> = {|\n    ...BuiltInPropsDefinitionType<P>,\n    [ string ] : MixedPropDefinitionType<P>\n|};\n\nconst defaultNoop = () => noop;\nconst decorateOnce = ({ value }) => once(value);\n\nexport function getBuiltInProps<P>() : BuiltInPropsDefinitionType<P> {\n    return {\n        window: {\n            type:          'object',\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate({ value } : { value : CrossDomainWindowType | ProxyWindow }) {\n                if (__DEBUG__) {\n                    if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                        throw new Error(`Expected Window or ProxyWindow`);\n                    }\n    \n                    if (isWindow(value)) {\n                        // $FlowFixMe\n                        if (isWindowClosed(value)) {\n                            throw new Error(`Window is closed`);\n                        }\n    \n                        // $FlowFixMe\n                        if (!isSameDomain(value)) {\n                            throw new Error(`Window is not same domain`);\n                        }\n                    }\n                }\n            },\n            decorate({ value } : { value : CrossDomainWindowType | ProxyWindow }) : ProxyWindow {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        'number',\n            required:    false,\n            sendToChild: false\n        },\n\n        close: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        cspNonce: {\n            type:     'string',\n            required: false\n        },\n\n        getParent: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        onDisplay: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        'function',\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onError: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          'function',\n            required:      false,\n            sendToChild:   false,\n            default:       defaultNoop,\n            childDecorate: ({ onProps }) => onProps\n        }\n    };\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize } from 'belter/src';\n\nimport { getChildPayload, childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { CONTEXT, POST_MESSAGE, WILDCARD, DEFAULT_DIMENSIONS } from '../constants';\nimport { react, angular, vue, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal } from '../lib';\nimport type { CssDimensionsType, StringMatcherType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType, type PropsType } from './props';\n\ntype LoggerPayload = { [string] : ?string };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\nexport type ComponentOptionsType<P> = {|\n\n    tag : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain? : string | RegExp,\n    bridgeUrl? : string,\n\n    props? : UserPropsDefinitionType<P>,\n\n    dimensions? : CssDimensionsType,\n    autoResize? : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({ props : PropsInputType<P> }) => void,\n\n    logger? : Logger\n|};\n\nexport type NormalizedComponentOptionsType<P> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({ props : PropsType<P> }) => string,\n    domain : ?(string | RegExp),\n    bridgeUrl : ?string,\n\n    propsDef : PropsDefinitionType<P>,\n    dimensions : CssDimensionsType,\n    autoResize : { width? : boolean, height? : boolean, element? : string },\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : {\n        iframe? : { [string] : string },\n        popup? : { [string] : string }\n    },\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({ props : PropsInputType<P> }) => void,\n    logger : Logger\n|};\n\ntype ZoidRenderer = {|\n    render : (container? : string | HTMLElement, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : string, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\nexport type ZoidComponentInstance<P> = {| ...ParentHelpers<P>, ...ZoidRenderer |};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P> = {\n    (PropsInputType<P>) : ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>\n};\n\nfunction normalizeOptions<P>(options : ComponentOptionsType<P>) : NormalizedComponentOptionsType<P> {\n    let {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props: propsDef = {},\n        dimensions = {},\n        autoResize = {},\n        allowedParentDomains = WILDCARD,\n        attributes = {},\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        logger = { info: noop }\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n    const { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = dimensions;\n\n    propsDef = { ...getBuiltInProps(), ...propsDef };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        propsDef,\n        dimensions: { width, height },\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger\n    };\n}\n\nlet clean = cleanup();\n\nexport type Component<P> = {|\n    init : (PropsInputType<P>) => ZoidComponentInstance<P>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P>\n|};\n\nexport function component<P>(opts : ComponentOptionsType<P>) : Component<P> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef\n    } = options;\n\n    const global = getGlobal();\n    const driverCache = {};\n\n    const isChild = () : boolean => {\n        const payload = getChildPayload();\n        return Boolean(payload && payload.tag === tag && payload.childDomain === getDomain());\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { overrides } }) => {\n            return {\n                parent: parentComponent(options, overrides, source)\n            };\n        });\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : string | HTMLElement) : string | HTMLElement => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n    \n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n                \n                return context;\n            }\n    \n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (props : PropsInputType<P>) : ZoidComponentInstance<P> => {\n        props = props || getDefaultInputProps();\n        props.onDestroy = memoize(props.onDestroy || noop);\n        const parent = parentComponent(options);\n        \n        parent.init();\n        parent.setProps(props);\n\n        clean.register(() => {\n            parent.destroy(new Error(`zoid destroyed all components`));\n        });\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n                \n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n                return parent.render(target, container, finalContext);\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        return {\n            ...parent.getHelpers(),\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n    \n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n    \n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D> = {|\n    register : (string, PropsDefinitionType<P>, (PropsInputType<P>) => ZoidComponentInstance<P>, L) => D\n|};\n\nexport function create<P>(options : ComponentOptionsType<P>) : ZoidComponent<P> {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n    \n    return init;\n}\n\nexport function destroyAll() : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = clean.all();\n    clean = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyComponents = destroyAll;\n\nexport function destroy() {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n}\n"],"sourceRoot":""}