version: '3.4'

services:
 db:
  restart: always
  image: postgres:13.1
  ports:
    - 5432
  volumes:
   - postgres:/var/lib/postgresql/data
  environment:
   - POSTGRES_USER=pdeals
   - POSTGRES_DB=pdeals
   - POSTGRES_PASSWORD=pdeals

 redis:
  restart: always
  image: redis
  ports:
    - 6379
  volumes:
    - redis:/data
  command:
    - --appendonly
    - "yes"

 frontend:
  restart: always
  build:
    context: ../
    dockerfile: Dockerfile.frontend
  user: ${UID:-0}
  ports:
    - 3000:3000
  expose:
    - 3000
  environment:
    - NODE_ENV
    - NPM
    - NEXT_PUBLIC_API_URL=http://api:3001/v1
    - NEXT_BUILD_API_URL

 api:
  restart: always
  build:
    context: ../
    dockerfile: Dockerfile.api
  user: ${UID:-0}
  depends_on:
    - redis
    - db
  ports:
    - 3001:3001
  expose:
    - 3001
  environment:
    - NODE_ENV
    - NPM
    - DB_HOST=db
    - DB_USERNAME=pdeals
    - DB_PASSWORD=pdeals
    - DB_NAME=pdeals

 crawler:
  restart: always
  build:
    context: ../
    dockerfile: Dockerfile.crawler
  user: ${UID:-0}
  depends_on:
    - redis
    - db
  environment:
    - ENV
    - NODE_ENV
    - NPM
    - DB_HOST=db
    - DB_USERNAME=pdeals
    - DB_PASSWORD=pdeals
    - DB_NAME=pdeals

volumes:
  postgres:
  redis:
